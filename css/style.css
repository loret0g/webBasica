/** Librería Normalize para que todos los elementos se vean consistentes en todos los navegadores, no que cada uno le da su estilo **/
/** ATAJOS: ctrl + shift + p -> user snippets - css.json **/
/** TAMAÑO RESPONSIVE **/
/* Los EM miden diferentes, porque se van juntando si el hijo pertenece al padre que x ej; ya tenía 2em
para que fuera igual que el padre, habría que ponerle 1em
   REM es relativo al documento, no a sus padres.
   TRUCO: html{font-size:62.5%;} body{font-size:1.6rem;} -> 1rem = 10px <- Los rem se van a adaptar a las pantallas
*/
html {
    font-size: 62.5%;
    box-sizing: border-box;         /* Truco para quitar el Box model: Se suma el height+padding */
    scroll-snap-type: y mandatory;
}
*, *:before, *:after {
    box-sizing: inherit;            /* No se hará el box-model, o sea -> no se sumará */
}

body {
    font-size: 1.6rem;
    font-family: "Cairo Play", sans-serif;
    margin: 0;
    background-image: linear-gradient(to top, var(--grisClaro), var(--blanco));
}

/* Pseudoelemento. Root sirve para almacenar variables */
:root {
    --blanco: #FFFFFF;     /* Customs properties */
    --oscuro: #212121;
    --primario: #ff6f61;
    --secundario: #f0f0f0;
    --gris: #3b3b3b;
    --grisClaro: #DFE9F3;
}

h1 {
    font-size: 3.8rem;
}

h2 {
    font-size: 2.8rem;
}

h3 {
    font-size: 1.8rem;
}

h1, h2, h3 {
    text-align: center;
}
/* Utilidades */
.w-sm-100 {
    width: 100%;
}
@media (min-width: 768px) {
    .w-sm-100 {
        width: 100%;
    }
}
.flex {
    display: flex;
}

.alinear-derecha {
    justify-content: flex-end;
}

.nav-bg {
    background-color: var(--oscuro);
}

.contenedor {
    /*  Serviría para centrar un contenedor
    margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;
    Es lo mismo que:
    margin: 0 auto 0 auto; Se repiten, asíque:
    */
    margin: 0 auto;
    max-width: 120rem;
}

.sombra {
    -webkit-box-shadow: 0px 0px 23px -7px rgba(110,110,110,1);
    -moz-box-shadow: 0px 0px 23px -7px rgba(110,110,110,1);
    box-shadow: 0px 0px 23px -7px rgba(110,110,110,1);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

.nav-principal {
    padding: 1rem;
    display: flex;
    flex-direction: column;     /* Cuando lo pones en column, es 'align-items' no justify (por defecto es row) */
    align-items: center;
}

@media (min-width: 768px) {
    .nav-principal {
        flex-direction: row;
        justify-content: center;
        justify-content: space-evenly;
    }
}

.nav-principal a {
    color: var(--primario);
    text-decoration: none;
    font-size: 2rem;
    padding: 1rem 2rem;
}

.nav-principal a:hover {
    background-color: var(--gris);
    border-radius: 8px 8px;
}

.portada {
    background-image: url(../img/portada.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center; 
    height: 30rem;
    /* padding: 10rem;      Si no le quito este padding.. para seleccionarlo desde el hijo -> le afectaría */
    position: relative;     /* Elemento padre posición relativa. Hace de mapa */
    margin-bottom: 2rem;
}

.cnt-portada {
    position: absolute;     /* Elemento hijo posición absoluta. Posicionas en el mapa */
    /* Coordenadas para seleccionar todo el hijo -> top: 0; right: 0; bottom: 0; left: 0; Más fácil: */
    height: 100%;
    width: 100%;
    background-color: rgba(58, 58, 58, 0.5);
    background-color: rgb(0, 0, 0 / 5%);
    color: var(--blanco);
    /* Alinear vertical y horizontalmente: */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.boton {
    background-color: var(--primario);
    color: var(--oscuro);
    padding: 1rem 3rem;
    border-radius: .5rem;
    text-decoration: none;
    margin-top: 1rem;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: bold;
    /* Para que se vea guay en móvil: */
    /* width: 90%; */
    text-align: center;
    border: none;
}
.boton:hover {
    cursor: pointer;
}

@media (min-width: 480px) {
    .boton {
        width: auto;
    }
}
/* .titulo:after {      No existe en el HTML, no se puede seleccionar este pseudoelemento
    content: "esto va después del título";
} */

/* @media (min-width: 768px) {
    .portada {
        height: 20rem;
        padding: 10rem;
    }
} */

/* Scroll Snap */
.nav-principal,
.servicios,
.formulario {
    scroll-snap-align: center;
    scroll-snap-stop: always;
}
@media (min-width: 768px) {
    .servicios {
        display: grid;
        /* grid-template-rows: 30rem 50rem; Tamaño de cada fila... Superior - inferior */
        /* grid-template-columns: 30rem 30rem; */
        /* grid-template-columns: 1fr 1fr 1fr;  Una fracción (como el 33% a cada columna) */
        grid-template-columns: repeat(3, 1fr);

       /* grid: 30rem / 30rem 30rem 30rem; /* rows / columnas */
       /* gap: 4rem; */
       column-gap: 4rem;
    }
}

.servicio {
    display: flex;
    flex-direction: column;align-items: center;
}

.servicio h3 {
    color: var(--gris);
}

.servicio p {
    line-height: 1.5;
    font-weight: 400;
    text-align: center;
}

.servicio .iconos {
    background-color: var(--grisClaro);
    height: 15rem;
    width: 15rem;
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

/* Contacto */
.formulario {
    background-color: var(--oscuro);
    color: var(--blanco);
    width: min(60rem, 100%); /* Utiliza el valor más pequeño y ahorramos mediaQueries */
    margin: 0 auto; /* Para un elemento cuyo padre no es display flex (El formulario es block) */
    padding: 2rem;

    border-radius: 1rem;
}

.formulario fieldset {
    border: none;
}

.formulario legend {
    text-align: center;
    color: var(--primario);
    text-transform: uppercase;
    margin-bottom: 2rem;
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 1rem;
    }
    .campo:nth-child(3),
    .campo:nth-child(4) {
        grid-column: 1 / 3; /* Que vaya de la columna 1 a la 3 */
    }
}
.campo {
    margin-bottom: 1rem;
}

.campo label {
    color: var(--secundario);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.campo textarea {
    height: 20rem;
}

/* .campo input[type="text"] */
.inputs {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

.footer {
    text-align: center;
}